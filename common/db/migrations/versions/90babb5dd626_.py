"""empty message

Revision ID: 90babb5dd626
Revises:
Create Date: 2025-01-21 23:40:42.280969

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '90babb5dd626'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'service',
        sa.Column('name', sa.String(length=128), nullable=False),
        sa.Column('description', sa.String(length=512), nullable=True),
        sa.Column(
            'status',
            postgresql.ENUM(
                'NEW',
                'GENERATING_CONFLUENCE_SPACE',
                'NEED_CREATE_RELEASE_FOLDER',
                'CREATING_RELEASE_FOLDER',
                'NEED_UPDATE_HOMEPAGE',
                'READY',
                name='servicestatus',
            ),
            nullable=False,
        ),
        sa.Column('confluence_page_link', sa.String(length=64), nullable=True),
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'user',
        sa.Column('name', sa.String(length=128), nullable=False),
        sa.Column('nickname', sa.String(length=64), nullable=False),
        sa.Column('email', sa.String(length=64), nullable=False),
        sa.Column('password', sa.String(length=512), nullable=False),
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table(
        'release',
        sa.Column('service_id', sa.Uuid(), nullable=False),
        sa.Column('name', sa.String(length=128), nullable=False),
        sa.Column(
            'status',
            postgresql.ENUM('NEW', 'GENERATING_RELEASE_PAGE', 'READY', name='releasestatus'),
            nullable=False,
        ),
        sa.Column('semantic_version', sa.String(length=32), nullable=True),
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ['service_id'],
            ['service.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'service_requirement',
        sa.Column('service_id', sa.Uuid(), nullable=False),
        sa.Column('responsible_id', sa.Uuid(), nullable=True),
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column('name', sa.String(length=64), nullable=False),
        sa.Column('value', sa.String(length=64), nullable=True),
        sa.ForeignKeyConstraint(
            ['responsible_id'],
            ['user.id'],
        ),
        sa.ForeignKeyConstraint(
            ['service_id'],
            ['service.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'service_space',
        sa.Column('service_id', sa.Uuid(), nullable=False),
        sa.Column('webui_link', sa.String(length=128), nullable=False),
        sa.Column('homepage_id', sa.Integer(), nullable=False),
        sa.Column('release_folder_id', sa.String(length=64), nullable=True),
        sa.Column('ext_id', sa.Integer(), nullable=False),
        sa.Column('key', sa.String(length=512), nullable=True),
        sa.Column('alias', sa.String(length=512), nullable=True),
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ['service_id'],
            ['service.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('service_id'),
    )
    op.create_index(op.f('ix_service_space_ext_id'), 'service_space', ['ext_id'], unique=True)
    op.create_table(
        'teammate',
        sa.Column('user_id', sa.Uuid(), nullable=False),
        sa.Column('service_id', sa.Uuid(), nullable=False),
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ['service_id'],
            ['service.id'],
        ),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['user.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'release_page',
        sa.Column('service_space_id', sa.Uuid(), nullable=False),
        sa.Column('release_id', sa.Uuid(), nullable=False),
        sa.Column('page_id', sa.String(length=64), nullable=False),
        sa.Column('webui_link', sa.String(length=128), nullable=False),
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ['release_id'],
            ['release.id'],
        ),
        sa.ForeignKeyConstraint(
            ['service_space_id'],
            ['service_space.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'release_requirement',
        sa.Column('release_id', sa.Uuid(), nullable=False),
        sa.Column('responsible_id', sa.Uuid(), nullable=True),
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column('name', sa.String(length=64), nullable=False),
        sa.Column('value', sa.String(length=64), nullable=True),
        sa.ForeignKeyConstraint(
            ['release_id'],
            ['release.id'],
        ),
        sa.ForeignKeyConstraint(
            ['responsible_id'],
            ['user.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('release_requirement')
    op.drop_table('release_page')
    op.drop_table('teammate')
    op.drop_index(op.f('ix_service_space_ext_id'), table_name='service_space')
    op.drop_table('service_space')
    op.drop_table('service_requirement')
    op.drop_table('release')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('service')
    # ### end Alembic commands ###
